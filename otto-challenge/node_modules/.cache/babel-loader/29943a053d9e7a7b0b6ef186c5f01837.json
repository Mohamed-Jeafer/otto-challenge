{"ast":null,"code":"var _jsxFileName = \"/home/mohdryad/Desktop/otto-challenge-server/otto-challenge/src/components/Upload.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\"; // import fs from \"fs\";\n\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upload = () => {\n  _s();\n\n  const [file, setFile] = useState(\"\");\n  const [report, setReport] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const onChange = event => {\n    setFile(event.target.files[0]);\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const res = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setReport(res.data);\n    } catch (err) {\n      if (err.response.status === 500) {\n        setErrorMessage(err.response.data);\n      } else {\n        setErrorMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"file\",\n          id: \"formFile\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid gap-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"submit\",\n          children: \"Button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), report ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"File Uploaded Successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Report: \", report, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      className: \"mt-2\",\n      children: [errorMessage, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Upload, \"P8gj357ef1zasbJbpIOalgR0oaQ=\");\n\n_c = Upload;\nexport default Upload; // .then(\n//   (response) => {\n//     setReport(response.data);\n//   },\n//   (err) => {\n//     if (err.status === 500) {\n//       seterrorMessage(\"There was an error with the server\", err);\n//     } else {\n//       seterrorMessage(\"this is error else \", err.response.msg);\n//     }\n//   }\n// );\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/home/mohdryad/Desktop/otto-challenge-server/otto-challenge/src/components/Upload.js"],"names":["React","Fragment","useState","axios","Upload","file","setFile","report","setReport","errorMessage","setErrorMessage","onChange","event","target","files","onSubmit","preventDefault","formData","FormData","append","res","post","headers","data","err","response","status","msg","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMS,QAAQ,GAAIC,KAAD,IAAW;AAC1BN,IAAAA,OAAO,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAG,MAAOH,KAAP,IAAiB;AAChCA,IAAAA,KAAK,CAACI,cAAN;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBd,IAAxB;;AAEA,QAAI;AACF,YAAMe,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW,SAAX,EAAsBJ,QAAtB,EAAgC;AAChDK,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADuC,OAAhC,CAAlB;AAKAd,MAAAA,SAAS,CAACY,GAAG,CAACG,IAAL,CAAT;AACD,KAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,UAAIA,GAAG,CAACC,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAC/BhB,QAAAA,eAAe,CAACc,GAAG,CAACC,QAAJ,CAAaF,IAAd,CAAf;AACD,OAFD,MAEO;AACLb,QAAAA,eAAe,CAACc,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBI,GAAnB,CAAf;AACD;AACF;AACF,GAnBD;;AAqBA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAEZ,QAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,EAAE,EAAC,UAHL;AAIE,UAAA,QAAQ,EAAEJ;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAgBGJ,MAAM,gBACL;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BAAYA,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBAML;AAAG,MAAA,KAAK,EAAE;AAAEqB,QAAAA,KAAK,EAAE;AAAT,OAAV;AAA4B,MAAA,SAAS,EAAC,MAAtC;AAAA,iBACGnB,YADH,EACiB,GADjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA3DD;;GAAML,M;;KAAAA,M;AA6DN,eAAeA,MAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Fragment, useState } from \"react\";\n// import fs from \"fs\";\nimport axios from \"axios\";\n\nconst Upload = () => {\n  const [file, setFile] = useState(\"\");\n  const [report, setReport] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const onChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const res = await axios.post(\"/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      setReport(res.data);\n    } catch (err) {\n      if (err.response.status === 500) {\n        setErrorMessage(err.response.data);\n      } else {\n        setErrorMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return (\n    <Fragment>\n      <form onSubmit={onSubmit}>\n        <div className=\"mb-4\">\n          <input\n            className=\"form-control\"\n            type=\"file\"\n            id=\"formFile\"\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"d-grid gap-2\">\n          <button className=\"btn btn-primary\" type=\"submit\">\n            Button\n          </button>\n        </div>\n      </form>\n      {report ? (\n        <div className=\"row mt-5\">\n          <h2>File Uploaded Successfully</h2>\n          <p>Report: {report} </p>\n        </div>\n      ) : (\n        <p style={{ color: \"red\" }} className=\"mt-2\">\n          {errorMessage}{\" \"}\n        </p>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Upload;\n\n// .then(\n//   (response) => {\n//     setReport(response.data);\n//   },\n//   (err) => {\n//     if (err.status === 500) {\n//       seterrorMessage(\"There was an error with the server\", err);\n//     } else {\n//       seterrorMessage(\"this is error else \", err.response.msg);\n//     }\n//   }\n// );\n"]},"metadata":{},"sourceType":"module"}